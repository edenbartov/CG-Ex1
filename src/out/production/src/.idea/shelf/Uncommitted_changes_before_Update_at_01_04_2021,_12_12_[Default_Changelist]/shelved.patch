Index: edu/cg/BasicSeamsCarver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.cg;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.LinkedList;\r\n\r\n\r\npublic class BasicSeamsCarver extends ImageProcessor {\r\n\t\r\n\t// An enum describing the carving scheme used by the seams carver.\r\n\t// VERTICAL_HORIZONTAL means vertical seams are removed first.\r\n\t// HORIZONTAL_VERTICAL means horizontal seams are removed first.\r\n\t// INTERMITTENT means seams are removed intermittently : vertical, horizontal, vertical, horizontal etc.\r\n\tpublic static enum CarvingScheme {\r\n\t\tVERTICAL_HORIZONTAL(\"Vertical seams first\"),\r\n\t\tHORIZONTAL_VERTICAL(\"Horizontal seams first\"),\r\n\t\tINTERMITTENT(\"Intermittent carving\");\r\n\t\t\r\n\t\tpublic final String description;\r\n\t\t\r\n\t\tprivate CarvingScheme(String description) {\r\n\t\t\tthis.description = description;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// A simple coordinate class which assists the implementation.\r\n\tprotected class Coordinate{\r\n\t\tpublic int X;\r\n\t\tpublic int Y;\r\n\t\tpublic Coordinate(int X, int Y) {\r\n\t\t\tthis.X = X;\r\n\t\t\tthis.Y = Y;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// TODO :  Decide on the fields your BasicSeamsCarver should include. Refer to the recitation and homework \r\n\t\t\t// instructions PDF to make an educated decision.\r\n\tprivate long[][] cost;\r\n\tprivate long[][] energy;\r\n\tprivate int[][] backtrack;\r\n\tprivate Coordinate[][] indexMatrix;\r\n\tBufferedImage gradientMag;\r\n\tBufferedImage greyscaled;\r\n\tBufferedImage coloredSeamsImage;\r\n\tprivate int rows;\r\n\tprivate int cols;\r\n\tLinkedList<LinkedList<Coordinate>> horizontalSeams;\r\n\r\n\tpublic BasicSeamsCarver(Logger logger, BufferedImage workingImage,\r\n\t\t\tint outWidth, int outHeight, RGBWeights rgbWeights) {\r\n\t\tsuper((s) -> logger.log(\"Seam carving: \" + s), workingImage, rgbWeights, outWidth, outHeight);\r\n\t\t// TODO : Include some additional initialization procedures.\r\n\t\tthis.gradientMag = gradientMagnitude();\r\n\t\tthis.greyscaled = greyscale();\r\n\t\tthis.coloredSeamsImage = deepCopy();\r\n\r\n\t\tcost = new long[this.inWidth][this.inHeight];\r\n\t\tenergy = new long[this.inWidth][this.inHeight];\r\n\t\tbacktrack = new int[this.inWidth][this.inHeight];\r\n\t\trows = this.inHeight;\r\n\t\tcols = this.inWidth;\r\n\r\n\t\tindexMatrix = new Coordinate[cols][rows];\r\n\t\tfor (int x = 0; x < cols; x++) {\r\n\t\t\tfor (int y = 0; y < rows; y++) {\r\n\t\t\t\tindexMatrix[x][y] = new Coordinate(x, y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thorizontalSeams = new LinkedList<>();\r\n\r\n\t}\r\n\t// TODO : calculate energy on all the pixels\r\n\t\t// TODO : dynamicly calculate min path\r\n\t// TODO : calculate energy on only removed seam the pixels\r\n\t\t// TODO : update cost metrix only removed seam the pixels\r\n\r\n\r\n\tpublic BufferedImage carveImage(CarvingScheme carvingScheme) {\r\n\t\tint numberOfVerticalSeamsToCarve = Math.abs(this.outWidth - this.inWidth);\r\n\t\tint numberOfHorizontalSeamsToCarve = Math.abs(this.outHeight - this.inHeight);\r\n\t\t// TODO :  Perform Seam Carving. Overall you need to remove 'numberOfVerticalSeamsToCarve' vertical seams\r\n\t\t\t\t// and 'numberOfHorizontalSeamsToCarve' horizontal seams from the image.\r\n\t\t\t\t// Note you must consider the 'carvingScheme' parameter in your procedure.\r\n\t\t\t\t// Return the resulting image.\r\n\r\n\t\tswitch (carvingScheme) {\r\n\t\t\tcase VERTICAL_HORIZONTAL: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase HORIZONTAL_VERTICAL: {\r\n\t\t\t\tfor (int i = 0; i < numberOfHorizontalSeamsToCarve; i++) {\r\n\t\t\t\t\tcarveHorizontal();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase INTERMITTENT: {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn downScaleImage();\r\n\t}\r\n\r\n\tprivate void carveHorizontal() {\r\n\t\tenergyCalc();\r\n\t\tbacktrack = new int[cols][rows];\r\n\t\tfor (int x = 0; x < cols; x++) {\r\n\t\t\tfor (int y = 0; y < rows; y++) {\r\n\t\t\t\tif (x == 0) {\r\n\t\t\t\t\tcost[x][y] = energy[x][y];\r\n\t\t\t\t} else {\r\n\t\t\t\t\thorizontalCostCalc(this.cost, x, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tLinkedList<Coordinate> seam = seamBacktrack();\r\n\t\trows--;\r\n\t\tcalcNewIndexMatrix(seam);\r\n\t\tseam = overrideSeam(seam);\r\n\t\thorizontalSeams.add(seam);\r\n\t}\r\n\r\n\tprivate void horizontalCostCalc(long[][] cost, int x, int y) {\r\n\t\tlong cU, cH, cD;\r\n\t\tif(y==0){\r\n\t\t\tcU = Long.MAX_VALUE;\r\n\t\t\tcH = Long.MAX_VALUE;\r\n\t\t\tcD = Math.abs(energy[x][y+1] - energy[x-1][y]);\r\n\t\t\tcD += cost[x-1][y+1];\r\n\r\n\t\t}else if(y==rows -1 ){\r\n\t\t\tcU = Math.abs(energy[x][y - 1] - energy[x - 1][y]);\r\n\t\t\tcH = Long.MAX_VALUE;\r\n\t\t\tcD = Long.MAX_VALUE;\r\n\t\t\tcU += cost[x-1][y-1];\r\n\t\t}else {\r\n\t\t\tcU = Math.abs(energy[x][y - 1] - energy[x - 1][y]) + Math.abs(energy[x][y - 1] - energy[x][y + 1]);\r\n\t\t\tcH = Math.abs(energy[x][y - 1] - energy[x][y + 1]);\r\n\t\t\tcD = Math.abs(energy[x][y + 1] - energy[x - 1][y]) + Math.abs(energy[x][y - 1] - energy[x][y + 1]);\r\n\r\n\t\t\tcU += cost[x-1][y-1];\r\n\t\t\tcH += cost[x-1][y];\r\n\t\t\tcD += cost[x-1][y+1];\r\n\t\t}\r\n\r\n\r\n\t\tlong min = Math.min(cU, Math.min(cH, cD));\r\n\t\tif(min == cU){\r\n\t\t\tbacktrack[x][y] = -1;\r\n\t\t}else if(min == cH){\r\n\t\t\tbacktrack[x][y] = 0 ;\r\n\t\t}else {\r\n\t\t\tbacktrack[x][y] = 1;\r\n\t\t}\r\n\t\tcost[x][y] = energy[x][y] + min;\r\n\r\n\t}\r\n\r\n\r\n\tprivate LinkedList<Coordinate> seamBacktrack() {\r\n\t\tLinkedList<Coordinate> seam = new LinkedList<>();\r\n\t\tint minIndex = 0;\r\n\t\tfor (int y = 1; y < rows; y++) {\r\n\t\t\tif (cost[cols - 1][y] < cost[cols - 1][minIndex]) {\r\n\t\t\t\tminIndex = y;\r\n\t\t\t}\r\n\t\t}\r\n\t\tCoordinate current = new Coordinate(cols - 1, minIndex);\r\n\t\tseam.add(current);\r\n\r\n\t\tfor (int x = cols - 1; x > 0; x--) {\r\n\t\t\tint y = current.Y;\r\n\t\t\ty += backtrack[x][y];\r\n\t\t\tcurrent = new Coordinate(x - 1, y);\r\n\t\t\tseam.add(0, current);\r\n\t\t}\r\n\t\treturn seam;\r\n\t}\r\n\r\n\tprivate Color originalIndexColor(BufferedImage img, Coordinate c) {\r\n\t\treturn new Color(img.getRGB(c.X, c.Y));\r\n\t}\r\n\r\n\tprivate void calcNewIndexMatrix(LinkedList<Coordinate> seam) {\r\n\t\tCoordinate[][] tempIndexMatrix = new Coordinate[cols][rows];\r\n\t\tfor (int x = 0; x < cols; x++) {\r\n\t\t\tfor (int y = 0; y < rows; y++) {\r\n\t\t\t\tif (seam.get(x).Y <= y) {\r\n\t\t\t\t\ttempIndexMatrix[x][y] = indexMatrix[x][y+1];\r\n\t\t\t\t} else if (seam.get(x).Y > y) {\r\n\t\t\t\t\ttempIndexMatrix[x][y] = indexMatrix[x][y];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSystem.out.println(x + \", \" + y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.indexMatrix = tempIndexMatrix;\r\n\t}\r\n\r\n\tprivate void energyCalc() {\r\n\t\tlong[][] newEnergy = new long[cols][rows];\r\n\t\tint nextX = 1;\r\n\t\tint nextY = 1;\r\n\t\tfor (int x = 0; x < cols; x++) {\r\n\t\t\tfor (int y = 0; y < rows - 1; y++) {\r\n\t\t\t\tif(x >= cols - 1) {\r\n\t\t\t\t\tnextX = -1;\r\n\t\t\t\t}\r\n\t\t\t\tif(y >= rows - 1) {\r\n\t\t\t\t\tnextY = -1;\r\n\t\t\t\t}\r\n\t\t\t\tint currentColor =  originalIndexColor(greyscaled, indexMatrix[x][y]).getBlue();\r\n\t\t\t\tint Dx = currentColor - originalIndexColor(greyscaled, indexMatrix[x + nextX][y]).getBlue();\r\n\t\t\t\tint Dy = currentColor - originalIndexColor(greyscaled, indexMatrix[x][y + nextY]).getBlue();\r\n\t\t\t\tint nextColor = Math.min((int) Math.sqrt((Math.pow(Dx,2) + Math.pow(Dy, 2)) / 2), 255);\r\n\t\t\t\tnewEnergy[x][y] = nextColor;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.energy = newEnergy;\r\n\t}\r\n\r\n\tprivate BufferedImage deepCopy () {\r\n\t\tBufferedImage newImage = newEmptyInputSizedImage();\r\n\t\tforEach((y, x) -> {\r\n\t\t\tnewImage.setRGB(x, y, workingImage.getRGB(x, y));\r\n\t\t});\r\n\t\treturn newImage;\r\n\t}\r\n\r\n\tprivate LinkedList<Coordinate> overrideSeam(LinkedList<Coordinate> seam) {\r\n\t\tLinkedList<Coordinate> tempSeam = new LinkedList<>();\r\n\t\tfor (Coordinate c : seam) {\r\n\t\t\ttempSeam.add(0, indexMatrix[c.X][c.Y]);\r\n\t\t}\r\n\t\treturn tempSeam;\r\n\t}\r\n\r\n\tprivate void colorSeam(LinkedList<Coordinate> seam, int seamColorRGB) {\r\n\t\tfor (Coordinate c : seam) {\r\n\t\t\tcoloredSeamsImage.setRGB(c.X, c.Y, seamColorRGB);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate BufferedImage downScaleImage() {\r\n\t\tBufferedImage result = newEmptyOutputSizedImage();\r\n\t\tSystem.out.println(cols - indexMatrix.length);\r\n\t\tSystem.out.println(rows - indexMatrix[0].length);\r\n\t\tfor (int x = 0; x < indexMatrix.length; x++) {\r\n\t\t\tfor (int y = 0; y < indexMatrix[0].length; y++) {\r\n\t\t\t\tCoordinate coordinate = indexMatrix[x][y];\r\n\t\t\t\tif (coordinate == null) {\r\n\t\t\t\t\tSystem.out.println(\"null:\" + x + \", \" + y);\r\n\t\t\t\t}\r\n\t\t\t\tint color = workingImage.getRGB(coordinate.X, coordinate.Y);\r\n\t\t\t\tresult.setRGB(x, y, color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic BufferedImage showSeams(boolean showVerticalSeams, int seamColorRGB) {\r\n\t\tint numberOfVerticalSeamsToCarve = Math.abs(this.outWidth - this.inWidth);\r\n\t\tint numberOfHorizontalSeamsToCarve = Math.abs(this.outHeight - this.inHeight);\r\n\t\t// TODO :  Present either vertical or horizontal seams on the input image.\r\n\t\t\t\t// If showVerticalSeams = true, carve 'numberOfVerticalSeamsToCarve' vertical seams from the image.\r\n\t\t\t\t// Then, generate a new image from the input image in which you mark all of the vertical seams that\r\n\t\t\t\t// were chosen in the Seam Carving process. \r\n\t\t\t\t// This is done by painting each pixel in each seam with 'seamColorRGB' (overriding its' previous value). \r\n\t\t\t\t// Similarly, if showVerticalSeams = false, carve 'numberOfHorizontalSeamsToCarve' horizontal seams\r\n\t\t\t\t// from the image.\r\n\t\t\t\t// Then, generate a new image from the input image in which you mark all of the horizontal seams that\r\n\t\t\t\t// were chosen in the Seam Carving process.\r\n\t\tif (showVerticalSeams) {\r\n\r\n\t\t} else {\r\n\t\t\tfor (int i = 0; i < numberOfHorizontalSeamsToCarve; i++) {\r\n\t\t\t\tcarveHorizontal();\r\n\t\t\t\tfor (LinkedList<Coordinate> seam : horizontalSeams) {\r\n\t\t\t\t\tcolorSeam(seam, seamColorRGB);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn coloredSeamsImage;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/edu/cg/BasicSeamsCarver.java b/edu/cg/BasicSeamsCarver.java
--- a/edu/cg/BasicSeamsCarver.java	(revision 5a5320aa891815499fa33b20dfb5a2f43bb9762d)
+++ b/edu/cg/BasicSeamsCarver.java	(date 1617267857125)
@@ -37,7 +37,6 @@
 			// instructions PDF to make an educated decision.
 	private long[][] cost;
 	private long[][] energy;
-	private int[][] backtrack;
 	private Coordinate[][] indexMatrix;
 	BufferedImage gradientMag;
 	BufferedImage greyscaled;
@@ -56,7 +55,6 @@
 
 		cost = new long[this.inWidth][this.inHeight];
 		energy = new long[this.inWidth][this.inHeight];
-		backtrack = new int[this.inWidth][this.inHeight];
 		rows = this.inHeight;
 		cols = this.inWidth;
 
@@ -104,13 +102,12 @@
 
 	private void carveHorizontal() {
 		energyCalc();
-		backtrack = new int[cols][rows];
-		for (int x = 0; x < cols; x++) {
+		for (int x = 0; x < cols - 1; x++) {
 			for (int y = 0; y < rows; y++) {
 				if (x == 0) {
 					cost[x][y] = energy[x][y];
 				} else {
-					horizontalCostCalc(this.cost, x, y);
+					cost[x][y] = energy[x][y] + horizontalCostCalc(this.cost, x, y);
 				}
 			}
 		}
@@ -122,42 +119,23 @@
 		horizontalSeams.add(seam);
 	}
 
-	private void horizontalCostCalc(long[][] cost, int x, int y) {
+	private long horizontalCostCalc(long[][] cost, int x, int y) {
 		long cU, cH, cD;
-		if(y==0){
+		if (y == 0) {
 			cU = Long.MAX_VALUE;
-			cH = Long.MAX_VALUE;
-			cD = Math.abs(energy[x][y+1] - energy[x-1][y]);
-			cD += cost[x-1][y+1];
-
-		}else if(y==rows -1 ){
-			cU = Math.abs(energy[x][y - 1] - energy[x - 1][y]);
-			cH = Long.MAX_VALUE;
+			cH = cost[x - 1][y];
+			cD = Math.abs(energy[x][y + 1] - energy[x - 1][y]) + cost[x - 1][y + 1];
+		} else if (y == cost[0].length - 1) {
+			cU = Math.abs(energy[x][y - 1] - energy[x - 1][y]) + cost[x - 1][y - 1];
+			cH = cost[x - 1][y];
 			cD = Long.MAX_VALUE;
-			cU += cost[x-1][y-1];
-		}else {
-			cU = Math.abs(energy[x][y - 1] - energy[x - 1][y]) + Math.abs(energy[x][y - 1] - energy[x][y + 1]);
-			cH = Math.abs(energy[x][y - 1] - energy[x][y + 1]);
-			cD = Math.abs(energy[x][y + 1] - energy[x - 1][y]) + Math.abs(energy[x][y - 1] - energy[x][y + 1]);
-
-			cU += cost[x-1][y-1];
-			cH += cost[x-1][y];
-			cD += cost[x-1][y+1];
-		}
-
-
-		long min = Math.min(cU, Math.min(cH, cD));
-		if(min == cU){
-			backtrack[x][y] = -1;
-		}else if(min == cH){
-			backtrack[x][y] = 0 ;
-		}else {
-			backtrack[x][y] = 1;
+		} else {
+			cU = Math.abs(energy[x - 1][y] - energy[x][y - 1]) + Math.abs(energy[x - 1][y] - energy[x + 1][y]);
+			cH = Math.abs(energy[x - 1][y] - energy[x + 1][y]);
+			cD = Math.abs(energy[x + 1][y] - energy[x][y - 1]) + Math.abs(energy[x - 1][y] - energy[x + 1][y]);
 		}
-		cost[x][y] = energy[x][y] + min;
-
+		return Math.min(cU, Math.min(cH, cD));
 	}
-
 
 	private LinkedList<Coordinate> seamBacktrack() {
 		LinkedList<Coordinate> seam = new LinkedList<>();
@@ -167,12 +145,20 @@
 				minIndex = y;
 			}
 		}
+
 		Coordinate current = new Coordinate(cols - 1, minIndex);
 		seam.add(current);
 
 		for (int x = cols - 1; x > 0; x--) {
 			int y = current.Y;
-			y += backtrack[x][y];
+			long mid = cost[x - 1][y];
+			long up = y > 0 ? cost[x - 1][y - 1] : Long.MAX_VALUE;
+			long down = y < rows - 1 ? cost[x - 1][y + 1] : Long.MAX_VALUE;
+			if (up < mid && up < down) {
+				y--;
+			} else if (down < mid && down < up) {
+				y++;
+			}
 			current = new Coordinate(x - 1, y);
 			seam.add(0, current);
 		}
@@ -187,10 +173,10 @@
 		Coordinate[][] tempIndexMatrix = new Coordinate[cols][rows];
 		for (int x = 0; x < cols; x++) {
 			for (int y = 0; y < rows; y++) {
-				if (seam.get(x).Y <= y) {
-					tempIndexMatrix[x][y] = indexMatrix[x][y+1];
-				} else if (seam.get(x).Y > y) {
+				if (seam.get(x).Y < y) {
 					tempIndexMatrix[x][y] = indexMatrix[x][y];
+				} else if (seam.get(x).Y >= y) {
+					tempIndexMatrix[x][y] = indexMatrix[x][y + 1];
 				} else {
 					System.out.println(x + ", " + y);
 				}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"BranchesTreeState\">\n    <expand />\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1856a456-4b48-4475-a19b-dde9c5c96cd3\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/edu/cg/BasicSeamsCarver.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/edu/cg/BasicSeamsCarver.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/src/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/src/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$CarvingScheme.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$CarvingScheme.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$Coordinate.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$Coordinate.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1q9lziP4SFLVEfG1RZ27dDXoboW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.general\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"edu.cg.Main\" />\n      <module name=\"src\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"edu.cg.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1856a456-4b48-4475-a19b-dde9c5c96cd3\" name=\"Default Changelist\" comment=\"\" />\n      <created>1616499950438</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1616499950438</updated>\n      <workItem from=\"1616499951635\" duration=\"17308000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1617267537164\">\n      <screen x=\"0\" y=\"25\" width=\"1920\" height=\"969\" />\n    </state>\n    <state width=\"1750\" height=\"203\" key=\"GridCell.Tab.0.bottom/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175\" timestamp=\"1617209401345\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.bottom/0.25.1920.969@0.25.1920.969\" timestamp=\"1617267537164\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.center\" timestamp=\"1617267537163\">\n      <screen x=\"0\" y=\"25\" width=\"1920\" height=\"969\" />\n    </state>\n    <state width=\"1750\" height=\"203\" key=\"GridCell.Tab.0.center/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175\" timestamp=\"1617209401345\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.center/0.25.1920.969@0.25.1920.969\" timestamp=\"1617267537163\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.left\" timestamp=\"1617267537163\">\n      <screen x=\"0\" y=\"25\" width=\"1920\" height=\"969\" />\n    </state>\n    <state width=\"1750\" height=\"203\" key=\"GridCell.Tab.0.left/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175\" timestamp=\"1617209401344\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.left/0.25.1920.969@0.25.1920.969\" timestamp=\"1617267537163\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.right\" timestamp=\"1617267537164\">\n      <screen x=\"0\" y=\"25\" width=\"1920\" height=\"969\" />\n    </state>\n    <state width=\"1750\" height=\"203\" key=\"GridCell.Tab.0.right/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175\" timestamp=\"1617209401345\" />\n    <state width=\"1878\" height=\"447\" key=\"GridCell.Tab.0.right/0.25.1920.969@0.25.1920.969\" timestamp=\"1617267537164\" />\n    <state x=\"715\" y=\"459\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1617263712246\">\n      <screen x=\"0\" y=\"25\" width=\"1792\" height=\"1009\" />\n    </state>\n    <state x=\"-1154\" y=\"488\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175\" timestamp=\"1617207621705\" />\n    <state x=\"715\" y=\"459\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.25.1792.1009@0.25.1792.1009\" timestamp=\"1617263712246\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5a5320aa891815499fa33b20dfb5a2f43bb9762d)
+++ b/.idea/workspace.xml	(date 1617268331838)
@@ -9,13 +9,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="1856a456-4b48-4475-a19b-dde9c5c96cd3" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/edu/cg/BasicSeamsCarver.java" beforeDir="false" afterPath="$PROJECT_DIR$/edu/cg/BasicSeamsCarver.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/src/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/src/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$CarvingScheme.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$CarvingScheme.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$Coordinate.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver$Coordinate.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/src/edu/cg/BasicSeamsCarver.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,6 +18,7 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitSEFilterConfiguration">
     <file-type-list>
@@ -97,31 +92,4 @@
     </option>
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
-  <component name="WindowStateProjectService">
-    <state width="1878" height="447" key="GridCell.Tab.0.bottom" timestamp="1617267537164">
-      <screen x="0" y="25" width="1920" height="969" />
-    </state>
-    <state width="1750" height="203" key="GridCell.Tab.0.bottom/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175" timestamp="1617209401345" />
-    <state width="1878" height="447" key="GridCell.Tab.0.bottom/0.25.1920.969@0.25.1920.969" timestamp="1617267537164" />
-    <state width="1878" height="447" key="GridCell.Tab.0.center" timestamp="1617267537163">
-      <screen x="0" y="25" width="1920" height="969" />
-    </state>
-    <state width="1750" height="203" key="GridCell.Tab.0.center/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175" timestamp="1617209401345" />
-    <state width="1878" height="447" key="GridCell.Tab.0.center/0.25.1920.969@0.25.1920.969" timestamp="1617267537163" />
-    <state width="1878" height="447" key="GridCell.Tab.0.left" timestamp="1617267537163">
-      <screen x="0" y="25" width="1920" height="969" />
-    </state>
-    <state width="1750" height="203" key="GridCell.Tab.0.left/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175" timestamp="1617209401344" />
-    <state width="1878" height="447" key="GridCell.Tab.0.left/0.25.1920.969@0.25.1920.969" timestamp="1617267537163" />
-    <state width="1878" height="447" key="GridCell.Tab.0.right" timestamp="1617267537164">
-      <screen x="0" y="25" width="1920" height="969" />
-    </state>
-    <state width="1750" height="203" key="GridCell.Tab.0.right/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175" timestamp="1617209401345" />
-    <state width="1878" height="447" key="GridCell.Tab.0.right/0.25.1920.969@0.25.1920.969" timestamp="1617267537164" />
-    <state x="715" y="459" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1617263712246">
-      <screen x="0" y="25" width="1792" height="1009" />
-    </state>
-    <state x="-1154" y="488" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/-1920.-17.1920.1175/0.25.1792.1009@-1920.-17.1920.1175" timestamp="1617207621705" />
-    <state x="715" y="459" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.25.1792.1009@0.25.1792.1009" timestamp="1617263712246" />
-  </component>
 </project>
\ No newline at end of file
